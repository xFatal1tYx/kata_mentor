Что такое raw type?

Сырые типы — это обобщённые типы без указания типа-параметра:
List list = new ArrayList<>();
В такой лист можно добавить объекты разного типа, например, Integer и String

Типизированные типы — наоборот, с указанием типа-параметра:
List<String> list = new ArrayList<>();

Raw type использовать не рекомендуется. 
Он нужен для обратной совместимости. До появления generics в Java 5.
При использовании возможна проблема heap pollution - ошибка, когда переменная параметризованного типа хранит в себе объект, параметризованный другим типом.

Например, в следующем коде, мы создаём объект типа Gen с сырым типом.
Далее, при вызове метода 'm', в котором мы передаём List, вызывается более "подходящий" метод принимающий List<String>.
(поскольку объект не знает, каким типом он задан)
В итоге это приводит к исключению - ClassCastException.

public class Ex1 {
    public static void main(String[] args) {
        List<Integer> integerList = Arrays.asList(1, 2, 3);
        Gen gen = new Gen();
        gen.m(integerList);
    }
    static class Gen<T> {
        <T> void m(Collection<T> collection) {
            for (T s : collection) {
                System.out.println(s);
            }
        }
        <T> void m(List<String> list) {
            for (String s : list) {
                System.out.println(s);
            }
        }
    }
}
