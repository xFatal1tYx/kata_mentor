1.	Что такое интерфейс? Когда использовать интерфейс?

Interface (контракт) — используется для добавления определённых методов или константных полей в классы. Затем класс реализует интерфейс, таким образом наследуя его абстрактные методы.
Interface — это не класс, его нельзя создать и у него не может быть конструкторов!

Для реализации интерфейсов в классе, используется слово implements, при этом один класс может имплементировать сразу несколько интерфейсов.
Если класс не определяет все абстрактные методы из интерфейса, он также должен быть абстрактным.

- Interface может содержать в себе только final public static (константные) поля.
- Interface может содержать в себе абстрактный (без реализации) и публичный метод (явно указывать это необязательно).
- (JAVA 8) Interface также может содержать методы с реализацией: 
default public метод (слово default необходимо указать)
static public метод (не наследуется, к нему можно обратиться через implement или напрямую)
- (JAVA 9) разрешены private методы, которые могут использоваться только внутри интерфейса
- Interface может наследовать другие интерфейсы, один или несколько (interface B2 extends A1, B1 {})
- Если в интерфейсе единственный абстрактный метод, он называется функциональным. Его можно отметить аннотацией @FunctionalInterface
- Интерфейс без методов называется маркерным (пр. cloneable, serializable)
