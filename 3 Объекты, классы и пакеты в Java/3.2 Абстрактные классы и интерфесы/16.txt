Когда надо использовать наследование от абстрактного класса, а когда реализацию интерфейса?

Развивать абстрактные классы в Java проще, чем интерфейсы. 
Если в интерфейсе слишком много методов и реализация их всех становится сложной, лучше создать абстрактный класс для реализации по умолчанию. 

Стоит использовать абстрактные классы, если:
- Необходимо поделиться кодом между несколькими тесно связанными классами.
- Классы, которые расширяют абстрактный класс, будут иметь много общих методов или полей, или требуют других модификаторов доступа (например, protected и private).
- Нужно объявить нестатические или не final поля. Это позволит определять методы, которые смогут получить доступ и изменить состояние объекта, которому они принадлежат.

Стоит использовать интерфейсы, если:
- Нужно описать определённую логику, которую должны поддерживать не связанные между собой классы (Comparable и Cloneable реализуются многими несвязанными классами).
- Нужно привести к одному типу группу объектов и гарантировать схожую функциональность.
- Планируется использовать множественное наследование типа.
