Что такое стримы? Для чего они нужны?

Stream API — это способ работать со структурами данных в функциональном стиле.

Stream — это последовательность элементов (поток данных), поддерживающих последовательные и параллельные операции над ними.
Методы стрима позволяют писать быстрый и мощный код для работы с коллекциями/массивами.
Интерфейс Stream<T> находится в пакете java.util.stream;

Операции над потоком относятся либо к промежуточным, либо к терминальным. 
Все промежуточные операции возвращают поток, так что мы можем объединять несколько промежуточных операций без использования точки с запятой.
Терминальные операции возвращают void или непотоковый результат.

Стримы бывают:
1) конечные и бесконечные (iterate, generate)
2) последовательные (однопоточные/линейные) и параллельные (многопоточные)
3) объектные и примитивные (IntStream, LongStream, DoubleStream)

Преимущества стримов:
- Более красивый и лаконичный код;
- Удобочитаемость;
- Неизменяемость переданных объектов;
- Ленивая инициализация;

Преимущества циклов:
- Производительность (стримы требуют больше памяти и ресурсов ЦП для работы);
- В циклах чаще легче отлаживать код;

В общем счёте, с появлением стримов, решение большинства задач (которые ранее решались с использованием циклов), теперь можно уместить в одну строку.
Это даже может привести к лучшему быстродействию (когда в коллекции много элементов, и мы работает с параллельными стримами).
