Что такое лямбда выражение и метод референс?

Лямбда-выражение — это упрощённая запись анонимного класса, реализующего функциональный интерфейс.
В лямбда выражении оператор -> разделяет параметры метода и тело метода

- Левая часть выражения может быть написана в краткой форме (без скобок), только если метод принимает один параметр;
- Если параметров нет, нужно указать пустые скобки;
- Если в правой части нужно указать несколько statements, то нужно: 
1) указать фигурные скобки
2) указать слово return
3) заканчивать каждый statements символом ‘;’

Лямбда выражение можно задать переменной типа этого интерфейса.
Параметры в лябмда выражениях видны только внутри тела лямбда выражения.
В лямбда выражениях можно обращаться к final переменным текущего метода,
переменная может быть effective final (заданная лишь однажды и неизменяемая в дальнейшем), а также к static полям класса и переменным интерфейса (с которым работает лямбда).


Ссылка на метод — это сокращенный синтаксис выражения лямбда, который выполняет только один метод. 
Это позволяет нам ссылаться на конструкторы или методы, не выполняя их. 
Ссылки на методы и Lambda аналогичны тем, что они оба требуют целевого типа, который состоит из совместимого функционального интерфейса.

Виды ссылок:
1) Ссылка на статические методы:
имя_класса::имя_метода (Integer::parseInt)
2) Ссылка на нестатический метод конкретного объекта:
экземпляр_класса::метод (System.out::println)
3) Ссылка на нестатический метод любого объекта конкретного типа (тогда первый параметр будет объектом для вызова):
имя_типа::имя_метода (Object::toString)
4) Ссылка на конструктор:
имя_класса::new (String[]::new)
