Методы Scanner и BufferedReader

Scanner нужен для считывания данных из источника, который мы для него указываем. Например, из строки, файла или консоли. 
Далее он распознает эту информацию и обрабатывает нужным образом. Сканер выполняет поиск токенов во входной строке.

Токен — это серия цифровых или буквенно-цифровых символов, которые заканчиваются разделителем. 
Стандартными разделителями являются: пробел ' ', символ табуляции '\t', перевода строки '\n' и возврата каретки '\r', который должен иметь тип String.

Методы Scanner:

void close() – закрыть объект;
boolean hasNext() – возвращает true, если на входе есть следующий токен;
hasNextByte/Int/Double/…() – проверяет, является ли следующий токен данным типом;
hasNextByte/Int/Double/…(int radix) – проверяет, является ли следующий токен данным типом и возможно ли его вывести в заданной системе счисления;
String next() – возвращает следующий токен в виде строки;
nextByte/Int/Double/…() – выводит следующий токен в заданным типе (InputMismatchException, если токен не подошёл);
nextByte/Int/Double/…(int radix) – выводит следующий токен в заданном типе и заданной системе счисления;
String nextLine() – перемещает сканнер на следующую строку и выводит пропущенную;
Pattern delimiter() – возвращает текущий шаблон, который используется для разделителя токенов;
String findInLine(Pattern/String pattern) – возвращает String, если в Scanner найдено соответствие;
Scanner skip(Pattern/String pattern) – пропускает символы в токене, если найдено соотвествие; 
Scanner useDelimitter(Pattern/String pattern) – задаёт разделитель для токенов;
Locale locale() / Scanner useLocale(Locale locale) – возвращает/задаёт Locale;
Scanner useRadix(int radix) – устанавливает заданную систему счисления по умолчанию;
Scanner reset() – сбрасывает методы useRadix(), useLocale() useDelimiter() по умолчанию;


Класс BufferedReader считывает текст из символьного потока ввода, буферизируя прочитанные символы. 
Использование буфера увеличивает производительность чтения данных из потока.

BufferedReader использует методы класса Reader:
close(); int read(); int read(char[]/CharBuffer buffer); read(char[] buffer, int offset, int count); long skip();

А также имеет свой собственный – readLine() для чтения построчно.
