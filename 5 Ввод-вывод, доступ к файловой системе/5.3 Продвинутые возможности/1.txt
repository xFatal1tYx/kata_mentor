Что такое сериализация? Зачем нужна сериализация?

Сериализация — процесс сохранения состояния объекта в последовательность байт.
Десериализация — процесс восстановления объекта из этих байт.
Любой Java объект можно преобразовать в последовательность байт.

Но чтобы появилась возможность сериализовать объект, он должен наследовать интерфейс Serializable.
Данный интерфейс не имеет каких-либо методов, а просто дает понять системе, что объект, который реализует его, может быть сериализован.

Для сериализации (записи) объектов в поток используется класс ObjectOutputStream и метод writeObject(). 
Для десериализации класс ObjectInputStream и метод readObject().

Основные форматы сериализации:
- JavaScript Object Notation (JSON)
- Yet Another Markup Language (YAML)
- XML
- BSON (binary JSON)

При стандартной сериализации, поля с модификатором transient или static не сериализуются. 

Если объект сериализации был изменен, то процесс десериализации выбросит исключение InvalidClassException, 
поскольку компилятор автоматически создаёт поле serialVersionUID и сравнивает идентичен ли объект. 
(Лучше задавать это поле самостоятельно внутри класса и изменять в процессе обновления)

Сериализация используется для сохранения состояния программы (её объектов) или для передачи данных между программами (например, по сети).
