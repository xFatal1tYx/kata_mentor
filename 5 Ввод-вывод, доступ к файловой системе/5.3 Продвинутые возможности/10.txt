В чём разница между поверхностным и глубоким клонированием? Как реализовать глубокое клонирование?

Java поддерживает два типа клонирования — поверхностное и глубокое клонирование.

По умолчанию, клонирование в Java является поверхностным, т.е. Object class не знает о структуре класса, которого он копирует. 
При поверхностном клонировании, JVM делает следующее:   
- Если класс имеет только члены примитивных типов, то будет создана совершенно новая копия объекта и возвращена ссылка на этот объект.
- Если класс содержит не только члены примитивных типов, тогда копируются ссылки на объекты этих классов. Следовательно, оба объекта будут иметь одинаковые ссылки.

Глубокое клонирование дублирует всё. 
В классе описывается конструктор, который принимает объект этого же класса и инициализирует значениями его полей поля нового объекта. 
О реализации инициализации полей полностью должен позаботиться разработчик класса.
public Car(Car otherCar) {
    this(otherCar.getName(), otherCar.getDriver());
}

Оба вышеуказанных способа потенциально могут иметь ошибки и по сути, создают копию объекта. 
Наиболее удобным и гибким способом клонирования является механизм сериализации. 
Если нет особой необходимости обработки полей во время клонирования объектов, то сериализация является предпочтительным вариантом.
